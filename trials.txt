"use client"

import { useState } from "react"
import {
  Bell,
  Calendar,
  ChevronDown,
  CircleDot,
  FileUp,
  HelpCircle,
  Info,
  Layout,
  MessageSquare,
  Moon,
  PackageOpen,
  Recycle,
  Search,
  Settings,
  Sun,
  User,
} from "lucide-react"
import "./Dashboard.css"
import logoIcon from "../../assets/images/Logo Icon.svg";

export default function Dashboard() {
  const [isDarkMode, setIsDarkMode] = useState(false)

  return (
    <div className={`app-container ${isDarkMode ? "dark-mode" : ""}`}>
      {/* Sidebar */}
      <div className="sidebar">
        {/* Logo */}
        <div className="logo">
          <div className="logo-icon">
            <img src={logoIcon} alt="logo" width="50" height="50" />
          </div>
          <span className="logo-text">GIGO</span>
        </div>

        {/* Navigation */}
        <div className="nav-container">
          <div className="nav-section">
            <p className="nav-section-title">Home</p>
            <NavItem icon={<Layout size={18} />} label="Overview" />
            <NavItem icon={<Recycle size={18} />} label="Recycling Tips" />
            <NavItem icon={<User size={18} />} label="Profile" />
          </div>

          <div className="nav-section">
            <p className="nav-section-title">Users</p>
            <NavItem icon={<MessageSquare size={18} />} label="Chat" />
            <NavItem icon={<FileUp size={18} />} label="Report Waste" active />
            <NavItem icon={<Calendar size={18} />} label="Pickup Schedule" />
            <NavItem icon={<PackageOpen size={18} />} label="Subscription" />
          </div>

          <div className="nav-section">
            <p className="nav-section-title">More</p>
            <NavItem
              icon={<CircleDot size={18} className="red-icon" />}
              label="Locate Facilities"
              iconColor="red-icon"
            />
            <NavItem icon={<CircleDot size={18} className="blue-icon" />} label="Payment" iconColor="blue-icon" />
            <NavItem
              icon={<CircleDot size={18} className="purple-icon" />}
              label="Report History"
              iconColor="purple-icon"
            />
          </div>

          <div className="nav-section preferences">
            <p className="nav-section-title">Preferences</p>
            <NavItem icon={<Settings size={18} />} label="Settings" hasDropdown />
            <NavItem icon={<Info size={18} />} label="About" />
            <NavItem icon={<HelpCircle size={18} />} label="Help Center" />
          </div>

          {/* Theme Toggle */}
          <div className="theme-toggle">
            <button className={`theme-button ${!isDarkMode ? "active" : ""}`} onClick={() => setIsDarkMode(false)}>
              <Sun size={16} />
              <span>Light</span>
            </button>
            <button className={`theme-button ${isDarkMode ? "active" : ""}`} onClick={() => setIsDarkMode(true)}>
              <Moon size={16} />
              <span>Dark</span>
            </button>
          </div>
        </div>
      </div>

      {/* Main Content */}
        <div className="main-content">
            {/* Header */}
            <header className="header">
                <div className="search-container">
                    <Search className="search-icon" size={20} />
                    <input type="text" placeholder="Mother Earth Day is coming..." className="search-input"  />
                </div>

                <div className="header-actions">
                    <button className="notification-button">
                    <Bell size={20} />
                    </button>
                    <div className="avatar">
                    <span>ðŸ‘¤</span>
                    </div>
                </div>
            </header>

            {/* Main Content */}
            <main className="content">
            {/* Upload Area */}
            <div className="upload-area">
                <div className="upload-icon-container">
                <FileUp size={32} className="upload-icon" />
                </div>
                <h3 className="upload-title">Upload a file, or drag and drop</h3>
                <p className="upload-description">PNG, JPEG, GIF up to 10MB</p>
            </div>

            {/* Verify Button */}
            <button className="verify-button">Verify Waste</button>

            {/* Form */}
            <div className="form-grid">
                <div className="form-group">
                    <label className="form-label">Location</label>
                    <input type="text" className="form-input" />
                </div>
                <div className="form-group">
                    <label className="form-label">Waste Type</label>
                    <div className="select-container">
                        <select className="form-select">
                            <option value="">Select waste type</option>
                            <option value="organic">Organic Waste</option>
                            <option value="plastic">Plastic</option>
                            <option value="glass">Glass</option>
                            <option value="metal">Metal</option>
                            <option value="paper">Paper</option>
                            <option value="electronics">Electronic Waste</option>
                            <option value="textiles">Textiles</option>
                            <option value="hazardous">Hazardous Waste</option>
                            <option value="construction">Construction Debris</option>
                            <option value="medical">Medical Waste</option>
                        </select>
                        <ChevronDown className="select-icon" size={20} />
                     </div>
                </div>
                <div className="form-group">
                    <label className="form-label">Date</label>
                    <div className="input-with-icon">
                        <input type="date" className="form-input" />
                    </div>
                </div>

                <div className="form-group">
                    <label className="form-label">Time</label>
                    <div className="select-container">
                        <select className="form-select">
                        <option value="">Select time</option>
                        </select>
                        <ChevronDown className="select-icon" size={20} />
                    </div>
                </div>
            </div>
            </main>
        </div>
    </div>
  )
}

function NavItem({ icon, label, active, hasDropdown, iconColor }) {
  return (
    <div className={`nav-item ${active ? "active" : ""} ${iconColor || ""}`}>
      <span className="nav-icon">{icon}</span>
      <span className="nav-label">{label}</span>
      {hasDropdown && <ChevronDown size={16} className="dropdown-icon" />}
    </div>
  )
}

























  .profile-container {
    max-width: 900px;
    margin: auto;
    padding-left: 20px;
    padding-right: 20px;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 10px;
}

.profile-header {
    display: flex;
    align-items: center;
    gap: 20px;
    margin-bottom: 20px;
}

.profile-pic {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 2px solid #4CAF50;
}

.profile-info h2 {
    margin: 0;
    font-size: 24px;
}

.profile-form {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.form-row {
    display: flex;
    margin-bottom: -20px;
}

.form-group {
    display: flex;
    flex-direction: column;
    flex: 1;
}

.form-group label {
    margin-bottom: 0px;
    font-weight: bold;
}

.form-group input {
    padding: 10px;
    border: 1px solid #4CAF50;
    border-radius: 5px;
    outline: none;
}
#email-textbox{
    width: 34%;
}

.submit-btn {
    background-color: var(--color-green-800);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 20px;
    margin-bottom: 5px;
}

.submit-btn:hover {
    background-color: var(--color-green-700)
}































:root {
    --color-white: #ffffff;
    --color-black: #000000;
    --color-gray-50: #f9fafb;
    --color-gray-100: #f3f4f6;
    --color-gray-200: #e5e7eb;
    --color-gray-300: #d1d5db;
    --color-gray-400: #9ca3af;
    --color-gray-500: #6b7280;
    --color-gray-600: #4b5563;
    --color-gray-700: #374151;
    --color-gray-800: #1f2937;
    --color-gray-900: #111827;
    --color-green-50: #f0fdf4;
    --color-green-100: #dcfce7;
    --color-green-500: #22c55e;
    --color-green-600: #16a34a;
    --color-green-700: #15803d;
    --color-green-800: #166534;
    --color-green-900: #14532d;
    --color-red-500: #ef4444;
    --color-blue-500: #3b82f6;
    --color-purple-500: #a855f7;
    --color-pink-500: #ec4899;
  
    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  
    --border-radius-sm: 0.125rem;
    --border-radius: 0.25rem;
    --border-radius-md: 0.375rem;
    --border-radius-lg: 0.5rem;
    --border-radius-xl: 0.75rem;
    --border-radius-2xl: 1rem;
    --border-radius-full: 9999px;
  }
  
  /* Base styles */
  
  body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans",
      "Helvetica Neue", sans-serif;
    line-height: 1.5;
    color: var(--color-gray-900);
  }
  
  /* App Container */
  .app-container {
    display: flex;
    height: 100vh;
    width: 210%;    
  }
  
  /* Dark Mode */
  .dark-mode {
    --bg-sidebar: var(--color-gray-900);
    --bg-main: var(--color-gray-950);
    --bg-header: var(--color-gray-900);
    --text-color: var(--color-white);
    --text-muted: var(--color-gray-400);
    --border-color: var(--color-gray-800);
    --input-bg: var(--color-gray-800);
  }
  
  .app-container:not(.dark-mode) {
    --bg-sidebar: var(--color-white);
    --bg-main: var(--color-gray-100);
    --bg-header: var(--color-white);
    --text-color: var(--color-gray-900);
    --text-muted: var(--color-gray-500);
    --border-color: var(--color-gray-200);
    --input-bg: var(--color-white);
  }
  
  /* Sidebar */
  .sidebar {
    width: 290px;
    background-color: var(--bg-sidebar);
    border-right: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;

  }
  
  .logo {
    padding: 1rem;
    display: flex;
    align-items: center;
    gap: 0.6rem;
  }
  
  .logo-icon span {
    color: var(--color-white);
    font-weight: bold;
  }
  
  .logo-text {
    font-weight: bold;
    font-size: 1.25rem;
    color: var(--text-color);
    padding-bottom: 10px;
  }
  
  .nav-container {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0.5rem;
    overflow-y: auto;
    margin-left: 10px;
  }
  
  .nav-section {
    margin-bottom: 1rem;
  }
  
  .nav-section.preferences {
    margin-top: auto;
  }
  
  .nav-section-title {
    font-size: 0.875rem;
    color: var(--text-muted);
    padding: 0 0.75rem;
    margin-bottom: 0.5rem;
  }
  
  .nav-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.5rem 0.75rem;
    border-radius: var(--border-radius-lg);
    margin-bottom: 0.25rem;
    color: var(--text-color);
    cursor: pointer;
    transition: background-color 0.2s;
  }
  
  .nav-item:hover {
    background-color: var(--color-gray-100);
  }
  
  .dark-mode .nav-item:hover {
    background-color: var(--color-gray-800);
  }
  
  .nav-item.active {
    background-color: var(--color-green-100);
    color: var(--color-green-700);
  }
  
  .dark-mode .nav-item.active {
    background-color: var(--color-green-900);
    color: var(--color-green-400);
  }
  
  .nav-label {
    font-size: 0.875rem;
    font-weight: 500;
  }
  
  .dropdown-icon {
    margin-left: auto;
  }
  
  .red-icon {
    color: var(--color-red-500);
  }
  
  .blue-icon {
    color: var(--color-blue-500);
  }
  
  .purple-icon {
    color: var(--color-purple-500);
  }
  
  .theme-toggle {
    height: 40px;
    width: 85%;
    background-color: var(--color-green-100);
    border-radius: var(--border-radius-full);
  }
  
  .dark-mode .theme-toggle {
    background-color: var(--color-gray-800);
  }
  
  .theme-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.25rem;
    padding: 0.25rem 0.75rem;
    border-radius: var(--border-radius-full);
    border: none;
    background: none;
    color: var(--color-gray-600);
    cursor: pointer;
    font-size: 0.875rem;
    text-align: center;
    margin-bottom: 10px;
  }
  
  .dark-mode .theme-button {
    color: var(--color-gray-300);
  }
  
  .theme-button.active {
    background-color: var(--color-white);
    color: var(--text-color);
    box-shadow: var(--shadow-sm);
  }
  
  .dark-mode .theme-button.active {
    background-color: var(--color-gray-700);
    color: var(--color-white);
  }
  
  /* Main Content */
  .main-content {
    /* learn on how positions work */
    position: relative;
    flex: 1;
    background-color: var(--bg-main);
    display: flex;
    flex-direction: column;
  }
  
  /* Header */
  .header {
    height: 4rem;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 1rem;
    width: 100%;
    position: relative;
  }
  
  .search-container {
    position: relative;
    flex: 1;
    max-width: 40rem;
  }
  
  .search-icon {
    position: absolute;
    left: 0.75rem;
    top: 40%;
    transform: translateY(-50%);
    color: var(--color-gray-400);
  }
  
  .search-input {
    width: 100%;
    padding: 0.5rem 1rem 0.5rem 2.5rem;
    border-radius: var(--border-radius-lg);
    border: 1px solid var(--border-color);
    background-color: var(--input-bg);
  }
  
  .search-input:focus {
    outline: none;
    border-color: var(--color-green-500);
    box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.2);
  }
  
  .header-actions {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
    margin-left: 3rem;
    
  }
  
  .notification-button {
    background: none;
    border: none;
    cursor: pointer;
    color: var(--color-gray-700);
  }
  
  .dark-mode .notification-button {
    color: var(--color-gray-300);
  }
  
  .avatar {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: var(--border-radius-full);
    background: linear-gradient(to right, var(--color-purple-500), var(--color-pink-500));
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-white);
  }

  .main-content{
    width: 100%;
  }
  
  /* Content */
  .content {
    flex: 1;
    padding: 1.5rem;
    
  }

  .pricing-table {
    max-width: 1100px;
    display: flex;
    justify-content: flex-start;
    gap: 30px;
    padding: 20px;
    font-family: Arial, sans-serif;
    margin-left: 100px;
  }
  
  .pricing-card {
    border: 1px solid #e0e0e0;
    border-radius: 30px;
    padding: 20px;
    width: 300px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background-color: white;
  }
  
  .tier-name {
    font-size: 24px;
    margin-bottom: 2px;
  }
  
  .monthly-charge {
    color: #666;
    font-size: 14px;
    margin-bottom: 10px;
  }
  
  .price {
    font-size: 36px;
    color: #008000;
    font-weight: bold;
    margin-bottom: 20px;
  }
  
  .features {
    list-style-type: none;
    padding: 0;
    margin-bottom: 10px;
  }
  
  .features li {
    margin-bottom: 5px;
  }
  
  .features .included {
    color: #333;
    padding: 10px;
  }
  
  .features .not-included {
    color: #999;
    padding: 10px;
  }
  
  button {
    width: 100%;
    padding: 10px;
    border-radius: 30px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
    margin-top: 25px;
  }

  hr {
    border: none;
    height: 2px;
    background: #e4e3e3e5;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  
  
  .button-outline {
    background-color: white;
    color: #008000;
    border: 2px solid #008000;
  }
  
  .button-outline:hover {
    background-color: #f0fff0;
  }
  
  .button-filled {
    background-color: #006400;
    color: white;
    border: none;
  }
  
  .button-filled:hover {
    background-color: #008000;
  }
  
  .trial-text {
    margin-top: 10px;
    font-size: 14px;
    color: black;
    text-decoration: underline;
  }
  
  @media (max-width: 768px) {
    .pricing-table {
      flex-direction: column;
      align-items: center;
    }
  
    .pricing-card {
      width: 100%;
      max-width: 300px;
    }
  }
  
  

  














  import { useState } from "react";
import "./PaymentPage.css";
import Sidebar from "../../components/sidebar/sidebar";

export default function Payment() {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [selectedPlan, setSelectedPlan] = useState("monthly");

  const plans = [
    { id: "monthly", name: "Monthly", price: "$10/mo" },
    { id: "quarterly", name: "Quarterly", price: "$25/qtr" },
    { id: "yearly", name: "Yearly", price: "$90/yr" },
  ];

  return (
    <div className={`app-container ${isDarkMode ? "dark-mode" : ""}`}>
      <Sidebar 
        isDarkMode={isDarkMode} 
        setIsDarkMode={setIsDarkMode} 
        activePage="payment" 
      />
      
      <div className="content-container">
        <div className="payment-page">
          <h1>Choose Your Payment Plan</h1>
          <div className="plans">
            {plans.map((plan) => (
              <div
                key={plan.id}
                className={`plan-card ${selectedPlan === plan.id ? "active" : ""}`}
                onClick={() => setSelectedPlan(plan.id)}
              >
                <h2>{plan.name}</h2>
                <p>{plan.price}</p>
              </div>
            ))}
          </div>
          <button className="subscribe-btn">
            Subscribe to {plans.find((plan) => plan.id === selectedPlan)?.name}
          </button>
        </div>
      </div>
    </div>
  );
}




























import React from 'react';
import './TopBar.css';
import { Bell, Search } from 'lucide-react';


const TopBar = () => {
  return (
    <div className="top-bar">
        <div className="search-container">
            <Search className="search-icon" size={20} />
            <input
              type="text"
              placeholder="Mother Earth Day is coming..."
              className="search-input"
            />
        </div>
        <div className="actions">
            <div className="icon notification">
            <Bell className="bell-icon" size={25}/>
            </div>
            <div className="profile">
            <img 
                src="" 
                alt="profile pic" 
                className="profile-pic" 
            />
            <div className="profile-info">
                <span className="name">John Doe</span>
                <span className="role">User</span>
            </div>
            </div>
        </div>
    </div>
  );
};

export default TopBar;

























/* Top Bar Container */
.top-bar {
    position: fixed;
    top: 0;
    right: 0;
    left: 290px; /* Adjust for sidebar width */
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    z-index: 99;
  }
  
  /* Search Bar */
  /* .search-container {
    display: flex;
    align-items: center;
    gap: 10px;
    background-color: #ffff;
    padding: -2px;
    border-radius: 10px;
    border: 1px solid #e5e7eb;
    width: 600px;
    border: none;
  } */
  .search-icon {
    position: absolute;
    left: 0.75rem;
    top: 40%;
    transform: translateY(-50%);
    color: var(--color-gray-400);
  }
  
  .search-input {
    width: 100%;
    padding: 0.5rem 1rem 0.5rem 2.5rem;
    border-radius: var(--border-radius-lg);
    border: 1px solid var(--border-color);
    background-color: var(--input-bg);
  }
  .search-bar input {
    border: none;
    outline: none;
    background: transparent;
    flex: 1;
    font-size: 14px;
  }
  .search-input::placeholder {
    color: #138233;
    font-size: 14px; 
    opacity: 1; 
}

  /* Actions Section */
  .actions {
    display: flex;
    align-items: center;
    gap: 20px;
  }
  
  .icon.notification i {
    font-size: 20px;
    color: #16a34a;
    cursor: pointer;
  }
  
  /* Profile Section */
  .profile {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .profile-pic {
    width: 40px;
    height: 40px;
    border-radius: 50%;
  }
  
  .profile-info {
    display: flex;
    flex-direction: column;
    font-size: 14px;
  }
  
  .profile-info .name {
    font-weight: bold;
  }
  
  .profile-info .role {
    color: #6b7280;
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .search-bar {
      width: 100%;
    }
  }
  